[{"C:\\Users\\User\\Documents\\weather-app\\src\\index.js":"1","C:\\Users\\User\\Documents\\weather-app\\src\\App.js":"2","C:\\Users\\User\\Documents\\weather-app\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\weather-app\\src\\Weather.js":"4","C:\\Users\\User\\Documents\\weather-app\\src\\WeatherInfo.js":"5","C:\\Users\\User\\Documents\\weather-app\\src\\FormatTime.js":"6","C:\\Users\\User\\Documents\\weather-app\\src\\FormatDate.js":"7","C:\\Users\\User\\Documents\\weather-app\\src\\FormatSun.js":"8","C:\\Users\\User\\Documents\\weather-app\\src\\sunset.js":"9","C:\\Users\\User\\Documents\\weather-app\\src\\WeatherIcon.js":"10","C:\\Users\\User\\Documents\\weather-app\\src\\WeatherTemperature.js":"11","C:\\Users\\User\\Documents\\weather-app\\src\\WeatherForecast.js":"12","C:\\Users\\User\\Documents\\weather-app\\src\\WeatherForecastPreview.js":"13"},{"size":543,"mtime":1607770652617,"results":"14","hashOfConfig":"15"},{"size":262,"mtime":1607938858789,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":3495,"mtime":1614481587518,"results":"18","hashOfConfig":"15"},{"size":1611,"mtime":1614482196312,"results":"19","hashOfConfig":"15"},{"size":377,"mtime":1607852248792,"results":"20","hashOfConfig":"15"},{"size":550,"mtime":1607853245178,"results":"21","hashOfConfig":"15"},{"size":492,"mtime":1607937561244,"results":"22","hashOfConfig":"15"},{"size":490,"mtime":1607937553876,"results":"23","hashOfConfig":"15"},{"size":182,"mtime":1613692571252,"results":"24","hashOfConfig":"15"},{"size":1217,"mtime":1611727184300,"results":"25","hashOfConfig":"15"},{"size":1161,"mtime":1614482771881,"results":"26","hashOfConfig":"15"},{"size":862,"mtime":1614482709074,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"nmhjor",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\weather-app\\src\\index.js",[],["62","63"],"C:\\Users\\User\\Documents\\weather-app\\src\\App.js",[],"C:\\Users\\User\\Documents\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\weather-app\\src\\Weather.js",["64"],"import React, { useState } from \"react\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\nimport WeatherForecast from \"./WeatherForecast\";\r\nimport FormattedTime from \"./FormatTime\";\r\nimport FormattedDate from \"./FormatDate\";\r\nimport './App.css';\r\nimport axios from \"axios\";\r\n\r\nexport default function Weather(props) {\r\n  const [weatherData, setWeatherData] = useState({ ready: false });\r\n  const [city, setCity] = useState (props.defaultCity);\r\n  function handleResponse(response) {\r\n    setWeatherData({\r\n      ready: true,\r\n      temperature: response.data.main.temp,\r\n      humidity: response.data.main.humidity,\r\n      description: response.data.weather[0].description,\r\n      wind: response.data.wind.speed,\r\n      date: new Date(response.data.dt * 1000),\r\n      city: response.data.name,\r\n      country: response.data.sys.country,\r\n      minTemp: response.data.main.temp_min,\r\n      maxTemp: response.data.main.temp_max,\r\n      feelsLike: response.data.main.feels_like,\r\n      sunrise: response.data.sys.sunrise,\r\n      sunset: response.data.sys.sunset,\r\n      icon: response.data.weather[0].icon,\r\n      timezone: response.data.timezone\r\n    });\r\n  }\r\n \r\n  function search() {\r\n    const apiKey = \"f0fc9549c6de17fa6c965f916fc7d8d4\";\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n    axios.get(apiUrl).then(handleResponse);\r\n  }\r\nfunction handleSubmit(event) {\r\n  event.preventDefault()\r\n  search();\r\n}\r\n\r\nfunction handleCityChange(event) {\r\n  setCity(event.target.value);\r\n}\r\nfunction showLocation(position) {\r\n  let apiKey = \"f0fc9549c6de17fa6c965f916fc7d8d4\";\r\n  let unit = \"metric\";\r\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${apiKey}&units=metric`;\r\n  axios.get(apiUrl).then(handleResponse);\r\n\r\n}\r\n \r\n  function getLocation(event) {\r\n    event.preventDefault();\r\n    navigator.geolocation.getCurrentPosition(showLocation);\r\n  }\r\n\r\n\r\n\r\nif (weatherData.ready) {\r\n  return (\r\n    <div className=\"container\" >\r\n      <div className=\"date-time\">\r\n        <span id=\"date\">Date: <FormattedDate /></span>\r\n        <br />\r\n        <span id=\"time\">Local Time: <FormattedTime /> </span>\r\n      </div>\r\n      <form onSubmit={handleSubmit} id=\"search-form\">\r\n        <input\r\n          id=\"searchField\"\r\n          type=\"search\"\r\n          placeholder=\"Enter your city\"\r\n          className=\"entercity\"\r\n          autocomplete=\"off\"\r\n          onChange={handleCityChange}\r\n        />\r\n        </form>\r\n        <button id=\"city-search\">\r\n        <input type=\"submit\" className=\"search-button\" value=\"Search\" />\r\n        </button>\r\n         <input\r\n            type=\"submit\"\r\n            className=\"current-location-button\"\r\n            id=\"current-location-button\"\r\n            value=\"Current location\"\r\n            onClick={getLocation}\r\n         />\r\n         \r\n     \r\n      <WeatherInfo data={weatherData}/>\r\n\r\n\r\n      <div className=\"row\"></div>\r\n      <br />\r\n\r\n      <h4 className=\"weather-forecast\">18 Hour Forecast</h4>\r\n\r\n      <div className=\"row\" id=\"forecast\"></div>\r\n      <WeatherForecast city={weatherData.city}/>\r\n\r\n      <br></br>\r\n      Open-sourced on {\" \"}\r\n      <a\r\n        href=\"https://github.com/maystar236/React-Weather-Application\"\r\n        target=\"_blank\" rel=\"noreferrer\"\r\n        id=\"github\"\r\n      >\r\n        GitHub\r\n      </a>\r\n    </div>\r\n  );\r\n} else {\r\nsearch();\r\n  return \"Loading.... please be patient :-)\";\r\n}}\r\n","C:\\Users\\User\\Documents\\weather-app\\src\\WeatherInfo.js",["65"],"import React from \"react\";\r\nimport Sunrise from \"./FormatSun\";\r\nimport Sunset from \"./sunset.js\";\r\nimport './App.css';\r\nimport WeatherIcon from \"./WeatherIcon\";\r\nimport WeatherTemperature from \"./WeatherTemperature\";\r\n\r\n\r\nexport default function WeatherInfo(props) {\r\n    return (\r\n    <div className=\"WeatherInfo\">\r\n        \r\n    <div className=\"current-weather\">\r\n    <h2>{props.data.city}, {props.data.country}</h2>\r\n    <br />\r\n    <div className=\"row\">\r\n      <div className=\"col-6\">\r\n        <h4 id=\"current-Desc\">{props.data.description}</h4>\r\n        <WeatherTemperature celsius={props.data.temperature} />\r\n      </div>\r\n      <div className=\"col-6\">\r\n        <div className=\"current-weather\">\r\n          <img src={`/Images/${props.data.icon}.png`} alt={props.data.description} id=\"icon\"></img>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"row\">\r\n    <div className=\"col-6\">\r\n      Feels like: {Math.round(props.data.feelsLike)}°C\r\n    </div>\r\n    <div className=\"col-6\">\r\n      Humidity: {Math.round(props.data.humidity)}%\r\n    </div>\r\n    <div className=\"col-6\">\r\n      Low: {Math.round(props.data.minTemp)}°C\r\n    </div>\r\n    <div className=\"col-6\">\r\n      Pressure: \r\n    </div>\r\n    <div className=\"col-6\">\r\n      High: {Math.round(props.data.maxTemp)}°C\r\n    </div>\r\n    <div className=\"col-6\">\r\n      Wind: {Math.round(props.data.wind)} km/h\r\n    </div>\r\n    <div className=\"col-6\">\r\n    Sunrise: <Sunrise sunrise={props.data.sunrise} />\r\n    </div>\r\n    <div className=\"col-6\">\r\n     Sunset: <Sunset sunset={props.data.sunset} />\r\n    </div>\r\n  </div>\r\n  </div>)\r\n}","C:\\Users\\User\\Documents\\weather-app\\src\\FormatTime.js",["66"],"import React from \"react\";\r\n\r\nexport default function FormattedTime() {\r\n    let currentTime = new Date();\r\n    let hour = currentTime.getHours();\r\n    if (hour < 10) {\r\n      hour = `0${hour}`;\r\n    }\r\n    let minutes = currentTime.getMinutes();\r\n    if (minutes < 10) {\r\n      minutes = `0${minutes}`;\r\n    }\r\n    let timeNow = `${hour}:${minutes}`;\r\n    return timeNow;\r\n  }","C:\\Users\\User\\Documents\\weather-app\\src\\FormatDate.js",["67"],"import React from \"react\";\r\n\r\nexport default function formattedDate(event) {\r\n    let currentTime = new Date();\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let month = months[currentTime.getMonth()];\r\n    let year = currentTime.getFullYear();\r\n    let date = currentTime.getDate();\r\n    let dateNow = `${month} ${date}, ${year}`;\r\n    return dateNow;\r\n  }","C:\\Users\\User\\Documents\\weather-app\\src\\FormatSun.js",["68"],"import React from \"react\";\r\n\r\nexport default function Sunrise (props) {\r\n    \r\n   let sunriseUnix = props.sunrise;\r\n   let sunriseDate = new Date(sunriseUnix*1000);\r\n   let sunriseHour = sunriseDate.getHours();\r\n  if (sunriseHour < 10) {\r\n    sunriseHour = `0${sunriseHour}`;\r\n  }\r\n  let sunriseMinutes = sunriseDate.getMinutes();\r\n  if (sunriseMinutes < 10) {\r\n    sunriseMinutes = `0${sunriseMinutes}`;\r\n  }\r\n  let sunriseTime = `${sunriseHour}:${sunriseMinutes}`;\r\nreturn sunriseTime;\r\n}\r\n","C:\\Users\\User\\Documents\\weather-app\\src\\sunset.js",["69"],"import React from \"react\";\r\n\r\nexport default function Sunset (props) {\r\n    let sunsetUnix = props.sunset;\r\n    let sunsetDate = new Date(sunsetUnix*1000);\r\n    let sunsetHour = sunsetDate.getHours();\r\n    if (sunsetHour < 10) {\r\n      sunsetHour = `0${sunsetHour}`;\r\n    }\r\n    let sunsetMinutes = sunsetDate.getMinutes();\r\n    if (sunsetMinutes < 10) {\r\n      sunsetMinutes = `0${sunsetMinutes}`;\r\n    }\r\n    let sunsetTime = `${sunsetHour}:${sunsetMinutes}`;\r\n    return sunsetTime;\r\n  }","C:\\Users\\User\\Documents\\weather-app\\src\\WeatherIcon.js",["70"],"import React from \"react\";\r\n\r\nexport default function WeatherIcon(props) {\r\n    return (\r\n        <img src=\"/Images/${response.data.weather[0].icon}.png\" alt={props.alt}/>\r\n    );\r\n}","C:\\Users\\User\\Documents\\weather-app\\src\\WeatherTemperature.js",[],"C:\\Users\\User\\Documents\\weather-app\\src\\WeatherForecast.js",[],"C:\\Users\\User\\Documents\\weather-app\\src\\WeatherForecastPreview.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":47,"column":7,"nodeType":"77","messageId":"78","endLine":47,"endColumn":11},{"ruleId":"75","severity":1,"message":"79","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":19},{"ruleId":"75","severity":1,"message":"80","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"80","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"80","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"80","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":5,"column":18,"nodeType":"83","messageId":"84","endLine":5,"endColumn":64},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'unit' is assigned a value but never used.","Identifier","unusedVar","'WeatherIcon' is defined but never used.","'React' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]